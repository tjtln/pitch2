AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Sample SAM Template for pitch-backend

Resources:
  GameWebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: GameWebSocketApi
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"

  GameFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: dist/
      Runtime: nodejs18.x
      Timeout: 5
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ConnectionsTable
      - Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: execute-api:ManageConnections
            Resource: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GameWebSocketApi}/*/@connections/*
      Environment:
        Variables:
          CONNECTIONS_TABLE: !Ref ConnectionsTable

  GameFunctionInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt GameFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GameWebSocketApi}/* 
      
  WebsocketIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref GameWebSocketApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub
        - arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations
        - Region: !Ref AWS::Region
          FunctionArn: !GetAtt GameFunction.Arn
      IntegrationMethod: POST

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GameWebSocketApi
      RouteKey: "$connect"
      Target: !Sub "integrations/${WebsocketIntegration}"

  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GameWebSocketApi
      RouteKey: "$disconnect"
      Target: !Sub "integrations/${WebsocketIntegration}"

  ActionRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GameWebSocketApi
      RouteKey: "action"
      Target: !Sub "integrations/${WebsocketIntegration}"

  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GameWebSocketApi
      RouteKey: $default
      Target: !Sub integrations/${WebsocketIntegration}

  GameWebSocketStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: prod
      ApiId: !Ref GameWebSocketApi
      AutoDeploy: true

  WebSocketDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn: ConnectRoute
    Properties:
      ApiId: !Ref GameWebSocketApi

   # DynamoDB Table for Game Data
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ConnectionsTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
      SSESpecification:
        SSEEnabled: true
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      Tags:
        - Key: Project
          Value: CardGameApp